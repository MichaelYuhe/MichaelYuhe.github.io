<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>学习 - 分类 - Yuhe&#39;s Blog</title>
        <link>https://MichaelYuhe.github.io/categories/%E5%AD%A6%E4%B9%A0/</link>
        <description>学习 - 分类 - Yuhe&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiayuhang1106@gmail.com (夏宇航)</managingEditor>
            <webMaster>xiayuhang1106@gmail.com (夏宇航)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 23 May 2022 08:00:10 &#43;0800</lastBuildDate><atom:link href="https://MichaelYuhe.github.io/categories/%E5%AD%A6%E4%B9%A0/" rel="self" type="application/rss+xml" /><item>
    <title>React生命周期</title>
    <link>https://MichaelYuhe.github.io/react%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link>
    <pubDate>Mon, 23 May 2022 08:00:10 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://MichaelYuhe.github.io/react%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid>
    <description><![CDATA[React生命周期 生命周期流程 React的生命周期可以分为三个阶段。 创建阶段 创建阶段主要有以下几个生命周期方法 constructor getDerivedStateFromProps render componentDidMount constructor 创建实例过程会自动调]]></description>
</item><item>
    <title>HTTP各版本区别</title>
    <link>https://MichaelYuhe.github.io/http%E5%90%84%E7%89%88%E6%9C%AC%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Sun, 22 May 2022 11:03:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://MichaelYuhe.github.io/http%E5%90%84%E7%89%88%E6%9C%AC%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[HTTP各版本区别 HTTP1.0 和 HTTP1.1 连接方面 HTTP1.0 默认使用非持久连接，而 HTTP1.1 默认使用持久连接 持久连接可以使得多个 HTTP 请求复用同一个 TCP 连接，以此避免使用非持久连接]]></description>
</item><item>
    <title>React事件机制</title>
    <link>https://MichaelYuhe.github.io/react%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/</link>
    <pubDate>Fri, 20 May 2022 08:00:10 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://MichaelYuhe.github.io/react%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/</guid>
    <description><![CDATA[React事件机制 DOM事件流 要学习React的事件机制前，需要先回顾一下DOM事件流。它包含三个流程：事件捕获，处于目标，事件冒泡。 事件捕]]></description>
</item><item>
    <title>Promise</title>
    <link>https://MichaelYuhe.github.io/promise/</link>
    <pubDate>Thu, 19 May 2022 08:00:10 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://MichaelYuhe.github.io/promise/</guid>
    <description><![CDATA[Promise Promise是什么 Promise 对象用于表示一个异步操作的最终完成 (或失败)及其结果值。 一个Promise对象代表一个在这个promise被创建出来]]></description>
</item><item>
    <title>事件循环</title>
    <link>https://MichaelYuhe.github.io/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</link>
    <pubDate>Wed, 18 May 2022 08:00:10 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://MichaelYuhe.github.io/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</guid>
    <description><![CDATA[事件循环 什么是事件循环 众所周知，JavaScript是单线程的，一次只能运行一个任务。幸运的是，浏览器为我们提供了Web API，包含了DOM]]></description>
</item><item>
    <title>Web前端安全之XSS和CSRF</title>
    <link>https://MichaelYuhe.github.io/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/</link>
    <pubDate>Wed, 03 Nov 2021 11:03:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://MichaelYuhe.github.io/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/</guid>
    <description><![CDATA[Web前端安全之XSS和CSRF 写在前面 昨晚（2021 / 11 / 2），面试有赞实习，面试官提问了XSS和CSRF，从没了解过的我只能尴尬地回答：]]></description>
</item></channel>
</rss>
